module ModuleDownloader

import "std/toml.earl"; as toml
import "std/utils.earl"; as utils
import "std/system.earl"; as sys

let git_dirs = [];

fn gather_src_files(gitdir) {
    let files = sys::ls(gitdir);
    return files.filter(|f| {
        return f.split(".").rev()[0] == "earl";
    });
}

@pub @world
fn get(
    earlmgr_install_envvar,
    import_envvar,
    link) {
    set_flag("--show-bash");

    println(f"dowloading: {link}");

    let tmp_git_dir = "__earl-package." + str(utils::iota());
    $f"git clone {link} --depth=1 {tmp_git_dir}";
    $f"ls {tmp_git_dir}/config.toml" |> let config_file;

    if config_file == "" {
        panic("no TOML file found!");
    }

    let config = toml::parse(config_file);
    let src_files = gather_src_files(tmp_git_dir);

    let import_prefix = config["config"]
                            .unwrap()["prefix"]
                            .unwrap();

    git_dirs.append((tmp_git_dir, import_prefix));

    let destination = env(import_envvar)+"/"+import_prefix;
    $f"sudo mkdir -p {destination}";
    foreach f in src_files {
        $f"sudo cp {f} {destination}";
    }

    # if config["deps"] {
    #     foreach l in config["deps"].unwrap() {
    #         get(l);
    #     }
    # }

    println(f"Installed module: {import_prefix}");
}

@pub @world
fn clean() {
    foreach d, p in git_dirs {
        $f"sudo rm -r {d}    # [{p}]";
    }
}
