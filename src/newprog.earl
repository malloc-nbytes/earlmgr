# MIT License

# Copyright (c) 2023 malloc-nbytes

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

module NewProj

import "std/system.earl";
import "mgr/templates.earl";

fn get_user_input(msg, possible) {
    while (1) {
        let inp = input(msg);
        if len(possible) == 0 {
            return inp;
        }
        for i in 0 to len(possible) {
            if inp == possible[i] {
                return possible[i];
            }
        }
        println("Invalid choice `", inp);
    }
}

@pub fn create_new_earl_project() {
    let name = get_user_input("Enter project name: ", []);
    let newdir = get_user_input("Create a new directory? [Y/n] ", ["Y", "y", "N", "n"]);
    let create_changelog = get_user_input("Create a changelog? [Y/n] ", ["Y", "y", "N", "n"]);
    let create_readme = get_user_input("Create a readme? [Y/n] ", ["Y", "y", "N", "n"]);

    let cwd = ".";

    if newdir == "Y" || newdir == "y" {
        System::mkdir(name);
        cwd = name;
    }

    let f1 = open(cwd+"/main.earl", "w");
    f1.write(Templates::main);
    f1.close();

    if create_changelog == 'Y' || create_changelog == 'y' {
        let f2 = open(cwd+"/CHANGELOG.md", "w");
        f2.write(Templates::changelog);
        f2.close();
    }

    if create_readme == 'Y' || create_readme == 'y' {
        let f3 = open(cwd+"/README.md", "w");
        f3.write(Templates::readme + name + "\n");
        f3.close();
    }

    println("Created new EARL project at `", cwd, "` with contents:");
    System::ls(cwd).foreach(|el| { println("  ", el); });
}
